#BEGIN
-- COMMON CONUSTRUCTIONS TESTS
-- -- LITERALS
-- -- -- STRING LITERAL
SELECT 'HELLO WORLD';
SELECT N'TESTING CONFLICT ON N - SPEC SYMBOL AND N - AS IDENTIFIER' AS N;
SELECT N'ABC' AS TSTCONSTRN;
SELECT N'ABC' "BCD" 'ASDFASDF' AS TSTCONSTNANDCONCAT;
SELECT 'AFDF' "ERWHG" "ADS" 'DGS' "RTER" AS TSTDIFFQUOTECONCAT;
SELECT 'SOME STRING' COLLATE LATIN1_DANISH_CI AS TSTCOLLATE;
SELECT _LATIN1'SOME STRING' COLLATE LATIN1_DANISH_CI AS TSTCOLLATE;
SELECT '\'' AS C1, '\"' AS C2, '\B' AS C3, '\N' AS C4, '\R' AS C5, '\T' AS C6, '\Z' AS C7, '\\' AS C8, '\%' AS C9, '\_' AS C10;
#END
#BEGIN
-- -- -- STRING LITERAL SPEC SYMBOLS
-- BUG: TWO SYMBOLS ' AFER EACH OTHER: ''
SELECT '\'QUOTED STRING\'' COL1, 'BACKSLASH \\ ' ', TWO DOUBLE QUOTE "" ' ', TWO SINGLE QUOTE ''' AS COL2;
SELECT '\'QUOTED STRING\' ' COL1, 'BACKSLASH \\ ' ', TWO DOUBLE QUOTE "" ' ', TWO SINGLE QUOTE ''' AS COL2;
SELECT * FROM `SELECT` WHERE `VARCHAR` = 'ABC \' ' AND `VARCHAR2` = '\'BCA';
#END
#BEGIN
-- -- -- NUMBER LITERAL
SELECT 1;
SELECT 1.E-3 AS 123E;
SELECT DEL1.E123 AS C FROM DEL1;
SELECT -1, 3E-2, 2.34E0;
SELECT -4.1234E-2, 0.2E-3 AS C;
SELECT .1E10;
SELECT -.1E10;
SELECT 15E3, .2E5 AS COL1;
SELECT .2E3 C1, .2E-4 AS C5;
#END
#BEGIN
-- -- -- NUMBER FLOAT COLLISION TEST
SELECT T1E2 AS E1 FROM T;
SELECT 1E2T AS COL FROM T;
#END
#BEGIN
-- -- -- HEXADECIMAL LITERAL
SELECT X'4D7953514C';
SELECT X'4D7953514C';
SELECT 0X636174;
SELECT 0X636174 C1;
SELECT X'4D7953514C' C1, 0X636174 C2;
SELECT X'79' AS `SELECT`, 0X2930 CC, 0X313233 AS C2;

#END
#BEGIN
-- -- -- NULL LITERAL
SELECT NULL;
SELECT NOT NULL;
SELECT \N;
SELECT ((\N));
SELECT NOT ((\N));
#END
#BEGIN
-- -- -- MIXED LITERALS
SELECT \N AS C1, NULL AS C2, N'STRING';
SELECT 4E15 COLUM, 'HELLO, ' 'WORLD', X'53514C';
SELECT 'ABC' ' BCD' ' \' \' ' AS COL, \N C2, -.1E-3;
#END

#BEGIN
-- -- VARIABLES
SELECT @MYVAR;
#END

#BEGIN
-- SELECT_COLUMN TESTS
SELECT * FROM `SELECT`;
SELECT *, `SELECT`.*, `SELECT`.* FROM `SELECT`;
SELECT *, 'ABC' FROM `SELECT`;
SELECT *, 1, \N, N'STRING' 'STRING2' FROM `SELECT`;
#END

#BEGIN
-- UNION TESTS
SELECT 1 UNION SELECT 2 LIMIT 0,5;
SELECT * FROM (SELECT 1 UNION SELECT 2 UNION SELECT 0) AS T ORDER BY 1 LIMIT 0,10;
SELECT COL1 FROM T1 UNION SELECT * FROM (SELECT 1 AS COL2) AS NEWT;
SELECT COL1 FROM T1 UNION (SELECT * FROM (SELECT 1 AS COL2) AS NEWT);
SELECT 1 AS C1 UNION (((SELECT 2)));
#END
#BEGIN
-- -- -- SUBQUERY IN UNION
SELECT 1 UNION SELECT * FROM (SELECT 2 UNION SELECT 3) AS TABLE1;
SELECT 1 UNION (SELECT * FROM (SELECT 2 UNION SELECT 3) AS TABLE1);
#END
#BEGIN
-- SUBQUERY FROM
SELECT * FROM (((((((SELECT COL1 FROM T1) AS TTT))))));
SELECT SHIP_POWER.GUN_POWER, SHIP_INFO.*
FROM
	(
		SELECT S.NAME AS SHIP_NAME, SUM(G.POWER) AS GUN_POWER, MAX(CALLIBR) AS MAX_CALLIBR
		FROM
			SHIPS S INNER JOIN SHIPS_GUNS SG ON S.ID = SG.SHIP_ID INNER JOIN GUNS G ON G.ID = SG.GUNS_ID
		GROUP BY S.NAME
	) SHIP_POWER
	INNER JOIN
	(
		SELECT S.NAME AS SHIP_NAME, SC.CLASS_NAME, SC.TONANGE, SC.MAX_LENGTH, SC.START_BUILD, SC.MAX_GUNS_SIZE
		FROM
			SHIPS S INNER JOIN SHIP_CLASS SC ON S.CLASS_ID = SC.ID
	) SHIP_INFO USING (SHIP_NAME)
ORDER BY SHIP_POWER.SHIP_NAME;
#END
#BEGIN
-- JOIN
-- -- -- JOIN CONDITION
SELECT * FROM T1 INNER JOIN (T1 AS TT1, T2 AS TT2) ON T1.COL1 = TT1.COL1;
SELECT * FROM  (T1 AS TT1, T2 AS TT2) INNER JOIN T1 ON T1.COL1 = TT1.COL1;
SELECT * FROM  T1 AS TT1, T2 AS TT2 INNER JOIN T1 ON TRUE;
#END
#BEGIN
-- WHERE_CONDITION TEST
SELECT COL1 FROM T1 INNER JOIN T2 ON (T1.COL1 = T2.COL2);
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE();
#END
#BEGIN
-- IDENTIFIERS TESTS
SELECT 1 AS 123E;
#END
#BEGIN
-- NOT LATIN1 LITERALS
SELECT CONVERT( LEFT( CONVERT( '自動下書き' USING BINARY ), 100 ) USING UTF8 ) AS X_0;
SELECT CONVERT( LEFT( CONVERT( '自動' USING BINARY ), 6 ) USING UTF8 ) AS X_0;
SELECT  T.*, TT.* FROM WPTESTS_TERMS AS T  INNER JOIN WPTESTS_TERM_TAXONOMY AS TT ON T.TERM_ID = TT.TERM_ID WHERE TT.TAXONOMY IN ('CATEGORY') AND T.NAME IN ('远征手记') ORDER BY T.NAME ASC;
#END
